df_s[(df_s$edlvdie==5) | (df_s$edlvdie==6) | (df_s$edlvdie==7) | (df_s$edlvdie==8) | (df_s$edlvdie==9), c("edu_cat")] <- 2 # Leaving Certificate
df_s[(df_s$edlvdie==10) | (df_s$edlvdie==11) | (df_s$edlvdie==12), c("edu_cat")] <- 3 # Advanced Certificate
df_s[(df_s$edlvdie==13) | (df_s$edlvdie==14) | (df_s$edlvdie==15), c("edu_cat")] <- 4 # Bachelor Degree
df_s[(df_s$edlvdie==16) | (df_s$edlvdie==17) | (df_s$edlvdie==18), c("edu_cat")] <- 5 # Postgraduate Degree
# Convert into factor variable
df_s$edu_cat <- factor(df_s$edu_cat,
levels = c(1,2,3,4,5),
labels = c("Junior Cycle",
"Leaving Certificate",
"Advanced Certificate",
"Bachelor Degree",
"Postgraduate Degree"))
levels(df_s$edu_cat)
typeof(df_s$edu_cat)
# Record missing values
df_s[(df_s == -67) | (df_s == -78) | (df_s == -89) | (df_s == 77) | (df_s == 88) | (df_s == 99) | (df_s == 5555) | (df_s == 7777) | (df_s == 8888) | (df_s == 9999)] <- NA
# Descriptive plots
vioplot(df_s$euftf_re ~ df_s$edu_cat)
plot(df_s$edlvdie,df_s$euftf_re)
plot(jitter(df_s$edlvdie,2),jitter(df_s$euftf_re,2))
# Simple model only considering socio-demographic variables
model_base <- lm(euftf_re~gndr + agea + brncntr, data=df_s)
summary(model_base)
# (1) Hypothesis 1 --------------
# The higher the years of education,
# the lower the level of Euroscepticism
# Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df_s)
summary(model1)
# Categorical independent variable
model1 <- lm(euftf_re~edu_cat,data=df_s)
summary(model1)
# Change reference category
plot(df_s$edu_cat)
df_s$edu_cat <- relevel(df_s$edu_cat, ref = 2)
model1 <- lm(euftf_re~edu_cat,data=df_s)
summary(model1)
# (2) Hypothesis 2 --------------
# The higher the income,
# the lower the level of Euroscepticism.
model2 <- lm(euftf_re~hinctnta,data=df_s)
summary(model2)
# (3) Hypothesis 3 --------------
# The higher the trust in politics,
# the lower the level of Euroscepticism.
model3 <- lm(euftf_re~trstplt,data=df_s)
summary(model3)
# (4) Hypothesis 4 --------------
# The more positive attitudes towards immigration,
# the lower the level of Euroscepticism.
model4 <- lm(euftf_re~imwbcnt,data=df_s)
summary(model4)
# (5) Putting it all together ------------
# Continuous independent variable
model1 <- lm(euftf_re~edlvdie,data=df_s)
summary(model1)
# Add economic dimension
model_eco <- lm(euftf_re~edlvdie + hinctnta,data=df_s)
summary(model_eco)
# Add political dimension
model_pol <- lm(euftf_re~edlvdie + hinctnta + trstplt, data=df_s)
summary(model_pol)
# Add cultural dimension
model_cul <- lm(euftf_re~edlvdie+ hinctnta + trstplt + imwbcnt, data=df_s)
summary(model_cul)
# Add socio-economic variables
model_final <- lm(euftf_re~edlvdie+ hinctnta + trstplt + imwbcnt + gndr + agea + brncntr, data=df_s)
summary(model_final)
# Get Latex table
stargazer(model1,model_eco,model_pol,model_cul,model_final)
# How to visualize results?
coefplot(model_final)
coefplot(model1, add=TRUE, col.pts="gray")
model_base <- lm(euftf_re~gndr + agea + brncntr, data=df_s)
summary(model_base)
avPlots(diff_and_presvote_vs_share,
main = "test1",
pch = 2,
col.lines = "red")
##### Preamble ----
# load libraries
# set wd
# clear global .envir
# remove objects
rm(list=ls())
# detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load packages: ggplot2
lapply(c("ggplot2", "ggthemes", "stargazer", "car"), pkgTest)
# ex: stringr
# lapply(c("stringr"),  pkgTest)
# Check working directory
getwd()
# If necessary, set wd for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
# COnfirm wd now correct
getwd()
##### Data Preparation  ----
# Read in data
inc.sub <- read.csv("https://raw.githubusercontent.com/ASDS-TCD/StatsI_Fall2023/main/datasets/incumbents_subset.csv")
# Familiarise with CSV data
typeof(inc.sub) # check type
head(inc.sub, 5) # Checking first 5 observations and their values
colnames(inc.sub) # checking column names for which are relevant
dim(inc.sub) # Find number of rows (observations) and columns (variables)
# Extract relevant data
df <- inc.sub[, c("difflog", "voteshare", "presvote")]
# Review extracted data, confirm correct
colnames(df) # checking column names
head(df, 5) # Checking first 5 observations and their values
dim(df) # number of rows (observations) and columns (variables)
### Question 1 ----
### 1. Regression w/ explanatory = difflog, outcome = voteshare
# Assign model and inspect data through summary
diff_vs_share <- lm(voteshare ~ difflog, data = df)
summary(diff_vs_share)
# Create and print LaTeX code for manual copy-and-paste.
LaTeX_Q1 <- stargazer(diff_vs_share, title = "Linear Regression Results: Positive Correlation between Vote Share of Incumbent and Difference", align = TRUE, type = "latex")
cat(LaTeX_Q1)
# See interpretation in LaTeX file.
### 2. Scatterplot w/ explanatory = difflog, outcome = voteshare + Regression line
pdf("plot_Q1.pdf")
# Set dataframe and axes for scatter plot
ggplot(df, aes(x = difflog, y = voteshare)) +
# Set point symbol and size
geom_point(pch = 1, size = 3, color = "navy") +
# Set regression line details
geom_smooth(data = diff_vs_share, method = "lm", se = FALSE, color = "blue", size = 3) +
# Add axes labels, exclude main title
labs(
# Will add main = "Scatterplot and Regression Line: Positive Correlation between Vote Share of Incumbent and Difference in Spending" in LaTeX
x = "Difference in Spending betweeen Incumbent and Challenger",
y = "Vote Share of Incumbent") +
# Set theme "par" and axis text formatting
theme_par() +
theme(
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
# Ensure graphics instructions end
dev.off()
### 3. Save residuals
# Assign residuals
residuals_diff_vs_share <- diff_vs_share$residuals
# Inspect output
head(residuals_diff_vs_share, 10)
typeof(residuals_diff_vs_share)
length(residuals_diff_vs_share) == dim(inc.sub)[1]
### 4. Write the prediction equation
equation_diff_vs_share <- paste("y =", diff_vs_share$coefficients[1], "+ (", diff_vs_share$coefficients[2], "* Xi )")
# Check output correct
equation_diff_vs_share
# Note maximum and minimum values of difference in spending between the incumbent and the challenger.
max(df$difflog)
min(df$difflog)
# See formal notation in LaTeX
### Question 2 ----
### 1. Regression w/ explanatory = difflog, outcome = presvote
# Assign model and inspect through summary
diff_vs_presvote <- lm(presvote ~ difflog, data = df)
summary(diff_vs_presvote)
# Create and print LaTeX code for manual copy-and-paste.
LaTeX_Q2 <- stargazer(diff_vs_presvote, title = "Linear Regression Results:
Positive Correlation between Vote Share of Presidential
Candidate of Incumbent's Party and Difference in Spending",
align = TRUE,
type = "latex")
cat(LaTeX_Q2)
# See interpretation in LaTeX file.
### 2. Scatterplot w/ explanatory = difflog, outcome = presvote + Regression line
pdf("plot_Q2.pdf")
# Set dataframe and axes for scatter plot
ggplot(df, aes(x = difflog, y = presvote)) +
# Set point symbol and size
geom_point(pch = 2, size = 2, color = "maroon") +
# Set regression line details
geom_smooth(data = diff_vs_presvote, method = "lm", se = FALSE, color = "red", size = 3) +
# Add axes labels, exclude main title
labs(
# Will add main = "Scatterplot and Regression Line: Positive Correlation between Vote Share of Presidential Candidate of Incumbent's Party and Difference in Spending" in LaTeX
x = "Difference in Spending betweeen Incumbent and Challenger",
y = "Vote Share of Presidential Candidate \nof Incumbent's Party") +
# Set theme "par" and axis text formatting
theme_par() +
theme(
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
# Ensure graphics instructions end
dev.off()
### 3. Save residuals
# Assign residuals
residuals_diff_vs_presvote <- diff_vs_presvote$residuals
# Check output
head(residuals_diff_vs_presvote, 10)
typeof(residuals_diff_vs_presvote)
length(residuals_diff_vs_presvote) == dim(inc.sub)[1]
### 4. Write the prediction equation
equation_diff_vs_presvote <- paste("y =", diff_vs_presvote$coefficients[1], "+ (", diff_vs_presvote$coefficients[2], "* Xi )")
# Check output correct
equation_diff_vs_presvote
# See formal notation in LaTeX
### Question 3 ----
### 1. Regression w/ explanatory = presvote, outcome = voteshare
# Assign model and inspect through summary
presvote_vs_share <- lm(voteshare ~ presvote, data = df)
summary(presvote_vs_share)
# Create and print LaTeX code for manual copy-and-paste.
LaTeX_Q3 <- stargazer(presvote_vs_share, title = "Linear Regression Results: Positive Correlation\\
between Vote Share of Presidential Candidate of Incumbent's Party\\
and Vote Share of Incumbent",
align = TRUE,
type = "latex")
cat(LaTeX_Q3)
# See interpretation in LaTeX file.
### 2. Scatterplot w/ explanatory = presvote, outcome = voteshare + Regression line
pdf("plot_Q3.pdf")
# Set dataframe and axes for scatter plot
ggplot(df, aes(x = presvote, y = voteshare)) +
# Set point symbol and size
geom_point(pch = 3, size = 3, color = "brown") +
# Set regression line details
geom_smooth(data = presvote_vs_share, method = "lm", se = FALSE, color = "orange", size = 3) +
# Add axes labels, exclude main title
labs(
# Will add main = "Scatterplot and Regression Line: Positive Correlation between Vote Share of Presidential Candidate of Incumbent's Party and Vote Share of Incumbent" in LaTeX
x = "Vote Share of Presidential Candidate \nof Incumbent's Party",
y = "Vote Share of Incumbent") +
# Set theme "par" and axis text formatting
theme_par() +
theme(
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
# Ensure graphics instructions end
dev.off()
### 3. Write the prediction equation
equation_presvote_vs_share <- paste("y =", presvote_vs_share$coefficients[1], "+ (", presvote_vs_share$coefficients[2], "* Xi )")
# Check output correct
equation_diff_vs_share
# Note maximum and minimum values of vote share for the incumbent party's presidential candidate.
max(df$presvote)
min(df$presvote)
# See formal notation on LaTeX file.
### Question 4 ----
### 1. Regression w/ explanatory = Q1 residuals, outcome = Q2 residuals
# Assign model and inspect through summary
not_diff_share_vs_presvote <- lm(residuals_diff_vs_share ~ residuals_diff_vs_presvote)
summary(not_diff_share_vs_presvote)
# Create and print LaTeX code for manual copy-and-paste.
LaTeX_Q4 <- stargazer(not_diff_share_vs_presvote, title = "Linear Regression Results: Positive Correlation\\
between Variation in Vote Share of Presidential Candidate of Incumbent's Party\\
and Variation in Vote Share of Incumbent\\
NOT Correlated with Variation in Difference in Spending",
align = TRUE,
type = "latex")
cat(LaTeX_Q4)
# See interpretation in LaTeX file.
### 2. Scatterplot w/ explanatory = Q1 residuals, outcome = Q2 residuals + Regression line
pdf("plot_Q4.pdf")
# Set dataframe and axes for scatter plot
ggplot(df, aes(x = presvote, y = voteshare)) +
# Set point symbol and size
geom_point(pch = 5, size = 2, color = "darkgreen") +
# Set regression line details
geom_smooth(data = presvote_vs_share, method = "lm", se = FALSE, color = "green", size = 3) +
# Add axes labels, exclude main title
labs(
# Will add main title in LaTeX
x = "Residuals from Question 2:\nVariation in Presidential Candidate \nof Incumbent's Party Vote Share \nNOT Correlated with Variation in \nSpending Difference",
y = "Residuals from Question 1:\nVariation in Incumbent Vote Share \nNOT Correlated with Variation in \nSpending Difference") +
# Set theme "par" and axis text formatting
theme_par() +
theme(
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
# Ensure graphics instructions end
dev.off()
### 3. Write the prediction equation
equation_not_diff_share_vs_presvote <- paste("y =",
not_diff_share_vs_presvote$coefficients[1],
"+ (",
not_diff_share_vs_presvote$coefficients[2],
"* Xi )")
# Check output correct
equation_not_diff_share_vs_presvote
# See formal notation on LaTeX file.
### Question 5 ----
### 1. Regression w/ explanatory = difflog + presvote, outcome = voteshare
# Assign model and inspect data through summary
diff_and_presvote_vs_share <- lm(voteshare ~ difflog + presvote, data = df)
summary(diff_and_presvote_vs_share)
# Create and print LaTeX code for manual copy-and-paste.
LaTeX_Q5 <- stargazer(diff_and_presvote_vs_share, title = "Multi-Variate Linear Regression Results",
align = TRUE,
type = "latex")
cat(LaTeX_Q5)
### 2. Write the prediction equation
equation_diff_and_presvote_vs_share <- paste("y =",
diff_and_presvote_vs_share$coefficients[1],
"+ (",
diff_and_presvote_vs_share$coefficients[2],
"* Xi ) + (",
diff_and_presvote_vs_share$coefficients[3],
"* Xii )")
# Check output correct
equation_diff_and_presvote_vs_share
# See formal notation on LaTeX file.
### 3. Which outputs identical between Q4 and Q5? Why are they identical?
avPlots(diff_and_presvote_vs_share,
main = "test1",
pch = 2,
col.lines = "red")
# Equations
# Coefficients (ie partial effects)
# F-Statistics
# Intercepts
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = c(1,2),
col.lines = "red")
?AVPlots
?avPlot
avPlot(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = c(1,2),
col.lines = "red")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
xlab = c(difflog = "Difference in Spending", voteshare = "Vote Share of Incumbet")
col.lines = "red")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
xlab = c(difflog = "Difference in Spending", prevote = "Vote Share of Incumbet")
col.lines = "red")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
xlab = c(difflog = "Difference in Spending", presvote = "Vote Share of Incumbet")
col.lines = "red")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2
col.lines = "red")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "red")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple") +
theme_par()
avPlots(diff_and_presvote_vs_share,
) +
theme_par()
main = "Added Variable Plots",
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple") + theme_wb()
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple") + theme_bw()
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple") + theme_economist()
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple") %>% + theme_economist()
avPlots(diff_and_presvote_vs_share,
main = "Added Variable Plots",
pch = 2,
col.lines = "purple") %>% + theme_economist(.)
pdf("plot_Q5.pdf")
avPlots(diff_and_presvote_vs_share,
# Will add "main = " title in LaTeX
pch = 2,
col.lines = "purple")
dev.off()
pdf("plot_Q5.pdf", width = 10)
avPlots(diff_and_presvote_vs_share,
# Will add "main = " title in LaTeX
pch = 2,
col.lines = "purple")
dev.off()
?par
avPlots(diff_and_presvote_vs_share,
main = "" # Will add "main = " title in LaTeX
pch = 2,
avPlots(diff_and_presvote_vs_share,
main = "" # Will add "main = " title in LaTeX
pch = 6,
avPlots(diff_and_presvote_vs_share,
main = "" # Will add "main = " title in LaTeX
pch = 6,
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 6,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 7,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 8,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 9,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 10,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 11,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 12,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 13,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 14,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 15,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 16,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 17,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
pch = 9,
col.lines = "purple")
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
layout = c(2,1),
pch = 9,
col.lines = "purple")
pdf("plot_Q5.pdf", width = 7)
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
layout = c(2,1),
pch = 9,
col.lines = "purple")
dev.off()
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
layout = c(2,1),
pch = 9,
col.lines = "purple") +
theme(
axis.title.x = element_text(size = 15),
axis.title.y = element_text(size = 15))
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
layout = c(2,1),
pch = 9,
col.lines = "purple")
pdf("plot_Q5.pdf", height = 9)
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
layout = c(2,1),
pch = 9,
col.lines = "purple")
dev.off()
pdf("plot_Q5.pdf", height = 8)
avPlots(diff_and_presvote_vs_share,
main = "", # Will add "main = " title in LaTeX
layout = c(2,1),
pch = 9,
col.lines = "purple")
dev.off()
diff_vs_share <- lm(voteshare ~ difflog, data = df)
summary(diff_vs_share)
summary(diff_vs_presvote)
summary(not_diff_share_vs_presvote)
summary(diff_and_presvote_vs_share)
