# Get working directory
getwd()
# Set working directory
setwd("C:\Users\criom\Documents\GitHub\StatsI_Fall2023\tutorials\03")
# Load data
df_not_tidy <- read.csv("datasets/movies.csv")
# Load data
df_not_tidy <- read.csv("C:/Users/criom/Documents/GitHub/StatsI_Fall2023/datasets/movies.csv")
# First step, look at data
View(df_not_tidy)
# Load tidy version of data
# The data is prepared using the data_wrangling.R script.
df <- readRDS("C:/Users/criom/Documents/GitHub/StatsI_Fall2023/datasets/movies.rds")
str(df)
str(df_not_tidy)
class(df$genre)
class(df_not_tidy$genre)
# Contingency table
table(df$genre, # Genre
df$critics_rating) # Rating
?subset
?%in%
help(%in%)
?in
help("%in%")
df_s <- subset(df, df$genre %in% c("Comedy","Documentary","Drama"))
View(df_s)
?subset
"Horror" %in% c("Comedy","Documentary","Drama") # Horror is in vector?
"Comedy" %in% c("Comedy", "Documentary","Drama") # Comedy is in vector?
df$genre  %in% c("Comedy","Documentary","Drama") # For each row, value==Comedy or Documentary or Drama?
# Contingency table
table(df_s$genre, # Genre
df_s$critics_rating) # Rating
# Problem: Although we filtered our data
# the underlying levels still exist. Getting rid of
# these, we use the droplevels-function.
class(df_s$genre)
levels(df_s$genre)
df_s$genre <- droplevels(df_s$genre)
# Contingency table
table(df_s$genre, # Genre
df_s$critics_rating) # Rating
# Add marginal distributions
addmargins(table(df_s$genre, # Genre
df_s$critics_rating)) # Rating
# Joint probability
prop.table(table(df_s$genre,
df_s$critics_rating))
63/444
# (A) Conditional probability
# What is the probability of "Rotten",
# conditional on Comedy?
?prop.table()
# Over rows --> Rating conditional on genre
prop.table(table(df_s$genre, # rows
df_s$critics_rating), # columns
margin = 1) # over rows
63/87
# Add marginal distributions
# Over rows --> Rating conditional on genre
addmargins(prop.table(table(df_s$genre,
df_s$critics_rating),
margin = 1)) # over rows
# Add marginal distributions
# Over rows --> Rating conditional on genre
addmargins(prop.table(table(df_s$genre,
df_s$critics_rating),
margin = 2)) # over rows
# Add marginal distributions
# Over rows --> Rating conditional on genre
addmargins(prop.table(table(df_s$genre,
df_s$critics_rating),
margin = 1)) # over rows
