# Install and load packages
# Adopted from: https://stackoverflow.com/questions/4090169/elegant-way-to-check-for-missing-packages-and-install-them
if(!require(wbstats)){
install.packages("wbstats")
library(wbstats)}
if(!require(tidyverse)){
install.packages("tidyverse")
library(tidyverse)}
if(!require(ggplot2)){
install.packages("ggplot2")
library(ggplot2)}
if(!require(stargazer)){
install.packages("stargazer")
library(stargazer)}
# Load zipped data from url
if(!require(readr)){
install.packages("readr")
library(readr)}
# Load data from World Bank API
wb <- wb(country=c("AF","BRA","ITA","NGA","SWE","UGA"),
indicator=c("NY.GDP.PCAP.CD", # GDP per capita (current US$)
"SP.POP.TOTL", # Population, total
"SE.SEC.ENRR", #  School enrollment, secondary (% gross)
"SH.DYN.MORT"), # Mortality rate, under-5 (per 1,000 live births)
startdate = 2000, enddate = 2020)
# Reshape data from long to wide
wb_re <- reshape(wb[, c("country","iso3c","date","indicatorID","value")], # df
timevar = "indicatorID",
idvar = c("country","date","iso3c"),
direction = "wide")
View(wb_re)
View(wb_re)
?timevar
>?reshaoe
>?reshape
?reshape
# Load Quality of Government data
qog <- read_csv("https://www.qogdata.pol.gu.se/data/qog_bas_ts_jan23.csv")
# Merge
df <- merge(wb_re, # Left df
qog[, c("ccodealp","year","bmr_dem")], # Right df
by.x=c("date","iso3c"), # merge variables in left
by.y=c("year","ccodealp"), # merge variables in right
all.x=TRUE, # merge operation, only keep left
sort=FALSE) # Do not sort observations
View(df)
# Rename columns
names(df)
names(df)[4] <- "gdp_per_cap"
names(df)[5] <- "pop_size"
names(df)[6] <- "sec_enrol"
names(df)[7] <- "mort"
names(df)[8] <- "democracy"
# Rename columns
names(df)
# Load df
df <- read_csv("df_income_mortality_best.csv")
# Save df
write.csv(df, "df_income_mortality.csv")
# Load df
df <- read_csv("df_income_mortality_best.csv")
# Get unique countries in df
df_uni <- select(df, country) # Select variable
df_uni <- distinct(df_uni, country) # Get unique values
?distinct
?unique
df_uni
# Get unique countries in df, using the pipe
df %>%
select(country) %>%
distinct(country)
# Load zipped data from url
temp <- tempfile(fileext = ".zip") # Initiate temporary file
# Download zip as temporary file
download.file("https://ucdp.uu.se/downloads/ged/ged231-csv.zip", temp, mode="wb")
ucdp <- read_csv(temp) # Read data
View(ucdp)
