# Applied Statistical Analysis I
# Tutorial 10: Multiple regression
# Remove objects
rm(list=ls())
# Detach all libraries
detachAllPackages <- function() {
basic.packages <- c("package:stats", "package:graphics", "package:grDevices", "package:utils", "package:datasets", "package:methods", "package:base")
package.list <- search()[ifelse(unlist(gregexpr("package:", search()))==1, TRUE, FALSE)]
package.list <- setdiff(package.list, basic.packages)
if (length(package.list)>0)  for (package in package.list) detach(package,  character.only=TRUE)
}
detachAllPackages()
# Load libraries
pkgTest <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[,  "Package"])]
if (length(new.pkg))
install.packages(new.pkg,  dependencies = TRUE)
sapply(pkg,  require,  character.only = TRUE)
}
# Load any necessary packages
lapply(c("stargazer","vioplot","arm","broom","ggplot2","fastDummies"),  pkgTest)
# Set working directory for current folder
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Research questions:
# What is the relationship between education and Euroscepticism?
# Subsetting data -----------
# Make sure to download ESS data first and
# add to the datasets folder in your repository.
# Download the ESS10 - integrated file, edition 3.2 here:
# https://ess-search.nsd.no/en/study/172ac431-2a06-41df-9dab-c1fd8f3877e7
# Look at the Codebook:
# **DV** (euftf), European unification go further or gone too far
# 0: Unification already gone too far, 10: Unification go further
# **IV** (edlvdie), Highest level of education, Ireland
# **IV** (eduyrs), Years of full-time education completed
# Z1 (hinctnta), Household's total net income, all sources
# Unit is deciles (ranging between 1 and 10th deciles)
# Z2 (trstplt), Trust in politicians
# 0: No trust at all, 10: Complete trust
# Z3 (imwbcnt), Immigrants make country worse or better place to live
# 0: Worse place to live, 10: Better place to live
# Some general socio-demographic controls
# Gender (gndr), 1: Male, 2: Female
# Age (agea), Age of respondent, calculated
# Born in country (brncntr), 1: Yes, 2: No
# Only include Ireland and relevant variables.
# df <- read.csv("../../datasets/ESS10.csv")
df <- read.csv("https://ess.sikt.no/en/datafile/f37d014a-6958-42d4-b03b-17c29e481d3d/254")
getwd()
View(df)
View(df)
# Only include Ireland and relevant variables.
# df <- read.csv("../../datasets/ESS10.csv")
df <- read.csv("C:\\Users\\criom\\Documents\\GitHub\\StatsI_Fall2023\\datasets\\ESS10\\ESS10.csv")
df_s <- df[df$cntry=="IE", c("euftf","edlvdie","eduyrs","hinctnta","trstplt","imwbcnt","gndr","agea","brncntr")]
View(df_s)
# Reverse euftf, to measure euroscepticism more intuitively
df_s["euftf_re"] = 10 - df_s[ ,c("euftf")]
df_s["edu_cat"] <- NA
df_s[(df_s$edlvdie==1) | (df_s$edlvdie==2) | (df_s$edlvdie==3) | (df_s$edlvdie==4), c("edu_cat")] <- 1 # Junior Cycle
df_s[(df_s$edlvdie==5) | (df_s$edlvdie==6) | (df_s$edlvdie==7) | (df_s$edlvdie==8) | (df_s$edlvdie==9), c("edu_cat")] <- 2 # Leaving Certificate
df_s[(df_s$edlvdie==10) | (df_s$edlvdie==11) | (df_s$edlvdie==12), c("edu_cat")] <- 3 # Advanced Certificate
df_s[(df_s$edlvdie==13) | (df_s$edlvdie==14) | (df_s$edlvdie==15), c("edu_cat")] <- 4 # Bachelor Degree
df_s[(df_s$edlvdie==16) | (df_s$edlvdie==17) | (df_s$edlvdie==18), c("edu_cat")] <- 5 # Postgraduate Degree
df_s$edu_cat <- factor(df_s$edu_cat,
levels = c(1,2,3,4,5),
labels = c("Junior Cycle",
"Leaving Certificate",
"Advanced Certificate",
"Bachelor Degree",
"Postgraduate Degree"))
levels(df_s$edu_cat)
typeof(df_s$edu_cat)
# Record missing values
df_s[(df_s == -67) | (df_s == -78) | (df_s == -89) | (df_s == 77) | (df_s == 88) | (df_s == 99) | (df_s == 999) | (df_s == 5555) | (df_s == 7777) | (df_s == 8888) | (df_s == 9999)] <- NA
# Save dataset
write.csv(df_s, "../../datasets/ess_euroscepticism.csv")
model_base <- lm(euftf_re~brncntr + gndr + agea, data=df)
is.factor(df$edu_cat)
# Convert into factor variable
df$edu_cat <- factor(df$edu_cat)
df <- read.csv("../../datasets/ess_euroscepticism.csv", row.names="X")
View(df)
is.factor(df$edu_cat)
# Convert into factor variable
df$edu_cat <- factor(df$edu_cat)
is.factor(df$edu_cat)
# Descriptive plots
par(mar = c(5, 5, 2, 2)) # Change margins in plot manually
vioplot(df$euftf_re ~ df$edu_cat)
# boxplot(df$euftf_re ~ df$edu_cat) # same idea, violin plot ALSO shows density distribution
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
# Simple model only considering socio-demographic variables
model_base <- lm(euftf_re~gndr + agea + brncntr, data=df)
summary(model_base)
lm(euftf_re~gndr + agea + brncntr, data=df)
model_base <- lm(euftf_re~gndr + agea + brncntr, data=df)
summary(model_base)
model_base <- lm(euftf_re~brncntr, data=df)
summary(model_base)
model_base <- lm(euftf_re~brncntr, data=df)
summary(model_base)
plot(df$agea, df$euftf_re)
abline(h=model_base$coefficients[1],col="black") # Regression line brncntr=0, Born in country
abline(h=model_base$coefficients[1]+model_base$coefficients[2],col="blue") # Regression line brncntr=1, Not born in country
legend(70, 10, # Legend
legend=c("Born in country", "Not born in country"),
col=c("black","blue"),
pch=1)
# boxplot(df$euftf_re ~ df$edu_cat) # same idea, violin plot ALSO shows density distribution
plot(df$edlvdie,df$euftf_re)
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
plot(jitter(df$edlvdie,2),jitter(df$euftf_re,2))
plot(df$agea, df$euftf_re)
abline(h=model_base$coefficients[1],col="black") # Regression line brncntr=0, Born in country
abline(h=model_base$coefficients[1]+model_base$coefficients[2],col="blue") # Regression line brncntr=1, Not born in country
legend(70, 10, # Legend
legend=c("Born in country", "Not born in country"),
col=c("black","blue"),
pch=1)
model_base <- lm(euftf_re~brncntr + gndr + agea, data=df)
summary(model_base)
# Plot
plot(df$agea, df$euftf_re)
abline(model_base$coefficients[1], model_base$coefficients[4],col="black") # Regression line brncntr=0, Born in country
abline(model_base$coefficients[1]+model_base$coefficients[2], model_base$coefficients[4],col="blue") # Regression line brncntr=1, Not born in country
legend(70, 10, # Legend
legend=c("Born in country", "Not born in country"),
col=c("black","blue"),
pch=1)
does_shekhar_smell <- function(arg){
cat(arg,"\n","Yes")
}
does_shekhar_smell("Does Shekhar smell?")
does_shekhar_smell("But are you sure?")
does_shekhar_smell("What would he say if I asked \"Do you smell?\" to Shekhar's face?")
